name: Deploy postgresql

on:
  push:
    branches:
      - master
      - dev
      - ci_v3
  workflow_dispatch:
  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

jobs:
  deploy-db-to-prod:
    runs-on: [self-hosted, linux, firstvds]
    environment: prod
    steps:
    - name: Deploy db to prod
      env:
        POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
        POSTGRES_USER: ${{ vars.POSTGRES_USER }}
        ENV_MENU: ${{ vars.ENV_VAR }}
        PROJECT_FOLDER: ${{ vars.PROJECT_FOLDER }}
        GIT_BRANCH_FULL: ${{ github.ref }}
      run: |
        echo $PROJECT_FOLDER
        cd /home/prostouser/prostoemenu_dev
        git pull
        GIT_BRANCH=$(echo $GIT_BRANCH_FULL | sed -r 's/^refs\/heads\///g')
        git checkout $GIT_BRANCH
        git pull
        docker compose -f ./infra/docker-compose.db.yml down || true
        docker compose -f ./infra/docker-compose.db.yml up -d
  deploy-db-to-dev:
    runs-on: [self-hosted, linux, timeweb]
    environment: dev
    steps:
    - name: Deploy db to dev
      env: 
        POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
        POSTGRES_USER: ${{ vars.POSTGRES_USER }}
        ENV_MENU: ${{ vars.ENV_VAR }}
        PROJECT_FOLDER: ${{ vars.PROJECT_FOLDER }}
        GIT_BRANCH_FULL: ${{ github.ref }}
      run: |
        echo $PROJECT_FOLDER
        cd /home/prostouser/prostoemenu_dev
        git pull
        GIT_BRANCH=$(echo $GIT_BRANCH_FULL | sed -r 's/^refs\/heads\///g')
        git checkout $GIT_BRANCH
        git pull
        docker compose -f ./infra/docker-compose.db.yml down || true
        docker compose -f ./infra/docker-compose.db.yml up -d