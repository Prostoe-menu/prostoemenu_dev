# Generated by Django 4.1.7 on 2023-04-20 17:20

from django.conf import settings
import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.contrib.postgres.operations import TrigramExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название категории')),
                ('description', models.TextField(null=True, verbose_name='Описание категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('header', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('username', models.CharField(max_length=100, verbose_name='Имя пользователя')),
                ('email', models.EmailField(max_length=254)),
                ('user_id', models.IntegerField(verbose_name='Номер пользователя')),
                ('description', models.TextField(null=True)),
                ('photo', models.ImageField(upload_to='', validators=[django.core.validators.FileExtensionValidator(['jpeg', 'jpg', 'png', 'webp'])], verbose_name='Фото к комментарию')),
                ('comment_date', models.DateField(verbose_name='Дата комментария')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['comment_date'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('date', models.DateField(verbose_name='Когда прислали')),
                ('page_id', models.IntegerField(null=True, verbose_name='Номер страницы')),
                ('name', models.CharField(max_length=50, verbose_name='Заголовок сообщения')),
                ('response', models.URLField(verbose_name='Адрес страницы')),
            ],
        ),
        # migrations.RunSQL(
        #     sql='CREATE EXTENSION IF NOT EXISTS pg_trgm;',
        #     reverse_sql=migrations.RunSQL.noop
        # ),
        TrigramExtension(),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название ингредиента')),
                ('category', models.CharField(default='Category', max_length=100, verbose_name='Категория ингредиента')),
                ('sort', models.IntegerField(null=True, verbose_name='Порядок ингредиента')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('abbreviation', models.CharField(max_length=30)),
                ('rank_size', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
                'ordering': ['rank_size'],
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название метода')),
                ('description', models.TextField(null=True, verbose_name='Описание метода')),
            ],
            options={
                'verbose_name': 'Метод',
                'verbose_name_plural': 'Методы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='images/', validators=[django.core.validators.FileExtensionValidator(['jpeg', 'jpg', 'png', 'webp'])], verbose_name='Фотография')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Рецепт')),
                ('description', models.TextField(verbose_name='Описание')),
                ('cooking_time', models.IntegerField(verbose_name='Время готовки')),
                ('oven_time', models.IntegerField(default=0, verbose_name='Время готовки у плиты')),
                ('publication_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('update_date', models.DateField(auto_now=True, verbose_name='Дата обновления')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=1, null=True, verbose_name='Рейтинг')),
                ('number_of_votes', models.IntegerField(null=True, verbose_name='Количество голосов')),
                ('exists', models.BooleanField(default=True, verbose_name='Существует')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество порций')),
                ('info', models.TextField(null=True, verbose_name='Доп. информация')),
                ('valid', models.BooleanField(default=False, verbose_name='Прошло модерацию')),
                ('parced', models.BooleanField(default=False, verbose_name='Получено от парсинга')),
                ('complexity', models.CharField(max_length=40, verbose_name='Сложность готовки')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Проверено')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField(verbose_name='Номер шага')),
                ('description', models.TextField(verbose_name='Описание шага')),
                ('photo', models.ImageField(null=True, upload_to='', verbose_name='Фотография')),
            ],
            options={
                'verbose_name': 'Метод',
                'verbose_name_plural': 'Методы',
                'ordering': ['step_number'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название тэга')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Номер рецепта')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.tag', verbose_name='Номер тэга')),
            ],
            options={
                'verbose_name': 'Тэг для рецепта',
                'verbose_name_plural': 'Тэги для рецепта',
            },
        ),
        migrations.CreateModel(
            name='RecipeSteps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Номер рецепта')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.step', verbose_name='Номер метода')),
            ],
            options={
                'verbose_name': 'Шаг для рецепта',
                'verbose_name_plural': 'Шаги для рецепта',
            },
        ),
        migrations.CreateModel(
            name='RecipePhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.photo', verbose_name='Номер фото')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Номер рецепта')),
            ],
            options={
                'verbose_name': 'Фото для рецепта',
                'verbose_name_plural': 'Фотографии для рецепта',
            },
        ),
        migrations.CreateModel(
            name='RecipeMethods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.method', verbose_name='Номер метода')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Номер рецепта')),
            ],
            options={
                'verbose_name': 'Метод для рецепта',
                'verbose_name_plural': 'Методы для рецепта',
                'ordering': ['recipe'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.IntegerField(verbose_name='Количество')),
                ('measure', models.CharField(max_length=20, verbose_name='Единица измерения')),
                ('ingredient_alternative_volume', models.IntegerField(blank=True, null=True, verbose_name='Количество')),
                ('ingredient_alternative_measure', models.CharField(blank=True, max_length=20, null=True, verbose_name='Единица измерения')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient', to='recipe.ingredient', verbose_name='Номер ингредиента')),
                ('ingredient_alternative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ingredient_alternative', to='recipe.ingredient', verbose_name='Номер альтернативы')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Номер рецепта')),
            ],
            options={
                'verbose_name': 'Ингредиент для рецепта',
                'verbose_name_plural': 'Ингредиент для рецепта',
            },
        ),
        migrations.CreateModel(
            name='RecipeComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exist', models.BooleanField(verbose_name='Существует')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.comment', verbose_name='Номер коммента')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Номер рецепта')),
            ],
            options={
                'verbose_name': 'Комментарий к рецепту',
                'verbose_name_plural': 'Комментарии к рецепту',
            },
        ),
        migrations.CreateModel(
            name='RecipeCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.category', verbose_name='Номер категории')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Номер рецепта')),
            ],
            options={
                'verbose_name': 'Категория для рецепта',
                'verbose_name_plural': 'Категории для рецепта',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='category',
            field=models.ManyToManyField(related_name='categories', through='recipe.RecipeCategories', to='recipe.category'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredient',
            field=models.ManyToManyField(related_name='ingredients', through='recipe.RecipeIngredients', to='recipe.ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='photo',
            field=models.ManyToManyField(related_name='photos', through='recipe.RecipePhotos', to='recipe.photo'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='step',
            field=models.ManyToManyField(related_name='steps', through='recipe.RecipeSteps', to='recipe.step'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tag',
            field=models.ManyToManyField(related_name='tags', through='recipe.RecipeTags', to='recipe.tag'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='user',
            field=models.ForeignKey(db_column='user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Id автора'),
        ),
        migrations.CreateModel(
            name='IngredientAlternatives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_first', to='recipe.ingredient', verbose_name='Номер ингредиента')),
                ('ingredient_alternative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_second', to='recipe.ingredient', verbose_name='Номер альтернативы ингредиента')),
            ],
            options={
                'verbose_name': 'Ингредиент для замены',
                'verbose_name_plural': 'Ингредиенты для замены',
                'ordering': ['ingredient'],
            },
        ),
        migrations.AddIndex(
            model_name='ingredient',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name'], name='ingredient_name_gin_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddField(
            model_name='comment',
            name='recipe',
            field=models.ManyToManyField(through='recipe.RecipeComment', to='recipe.recipe'),
        ),
        migrations.AlterUniqueTogether(
            name='recipetags',
            unique_together={('recipe', 'tag')},
        ),
        migrations.AlterUniqueTogether(
            name='recipesteps',
            unique_together={('recipe', 'step')},
        ),
        migrations.AlterUniqueTogether(
            name='recipephotos',
            unique_together={('recipe', 'photo')},
        ),
        migrations.AlterUniqueTogether(
            name='recipemethods',
            unique_together={('recipe', 'method')},
        ),
        migrations.AlterUniqueTogether(
            name='recipeingredients',
            unique_together={('recipe', 'ingredient')},
        ),
        migrations.AlterUniqueTogether(
            name='recipecategories',
            unique_together={('recipe', 'category')},
        ),
        migrations.AlterUniqueTogether(
            name='ingredientalternatives',
            unique_together={('ingredient', 'ingredient_alternative')},
        ),
    ]
