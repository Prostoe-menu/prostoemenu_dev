version: '3.9'

services:
  db-dev:
    container_name: db-$ENV_STAGE
    image: postgres:15-alpine
    volumes:
      - db_value:/var/lib/postgresql/data/
    environment:
      - ENVIRONMENT=$ENV_MENU
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_PASSWORD=$.POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - ENV_STAGE=$ENV_STAGE
    networks:
      - postgres-$ENV_STAGE

  web-dev:
    build:
      context: ./back/
      dockerfile: Dockerfile
    container_name: web-$ENV_STAGE
    command: >
      sh -c "python man–∞ge.py migrate &&
             gunicorn prostoemenu.wsgi:application --bind 0.0.0.0:8000"
    restart: always
    depends_on:
      - db-$ENV_STAGE
    environment:
      - ENVIRONMENT=$ENV_MENU
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_PASSWORD=$.POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - ENV_STAGE=$ENV_STAGE
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    networks:
      - postgres-$ENV_STAGE
      - prostoemenu-$ENV_STAGE

  nginx-dev:
    image: nginx:latest
    ports:
      - "$PORT_NGINX:80"
    volumes:
      - static_value:/usr/share/nginx/html/static/
      - media_value:/usr/share/nginx/html/media/
    environment:
      - PORT_NGINX=$PORT_NGINX
    depends_on:
      - web-$ENV_STAGE
    networks:
      - prostoemenu-$ENV_STAGE

networks:
  prostoemenu-dev:
    name: prostoemenu-$ENV_STAGE
    external: true
  postgres-dev:
    name: postgres-$ENV_STAGE
    external: true

volumes:
  db_value:
  static_value:
  media_value: